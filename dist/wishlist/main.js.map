{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AACuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHjB,iEAAoB,CAAC,MAAM,CAAC,EAC5B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;ACAjB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,yEAAqB;QACnB,oEAAkC;QAMlC,yEAAqB;QACf,wFAAwB;QAAA,4DAAK;QAEjC,4EAA+B;QACjC,4DAAM;;;;;;;;;;;;;;;;;;;;;;ACVkD;AAEF;AACT;AACkB;AACH;;AASvD,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAHR,wDAAY;0GAFd,oEAAa,EAAE,iEAAgB,EAAE,uEAAc,EAAE,0EAAe;mIAK/D,SAAS,mBANL,wDAAY,aACjB,oEAAa,EAAE,iEAAgB,EAAE,uEAAc,EAAE,0EAAe;;;;;;;;;;;;;;;;;ACHrE,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;gHAAlB,kBAAkB;QCP/B,oEAAG;QAAA,4EAAiB;QAAA,4DAAI;QACxB,uEAAM;QACJ,sEAA0B;QAE1B,yEAAQ;QAAA,iFAAiB;QAAA,4DAAS;;;;;;;;;;;;;;;;;;;ACHW;AACa;;AAOrD,MAAM,eAAe;;8EAAf,eAAe;4GAAf,eAAe;gHAHhB,yDAAY;mIAGX,eAAe,mBAJX,qEAAkB,aACvB,yDAAY,aACZ,qEAAkB;;;;;;;;;;;;;;;;;ACAvB,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;+GAAjB,iBAAiB;QCP9B,qEAAI;QACE,sEAAW;QAAA,4DAAK;;;;;;;;;;;;;;;;;;;ACAyB;AACW;;AAOnD,MAAM,cAAc;;4EAAd,cAAc;2GAAd,cAAc;+GAHf,yDAAY;mIAGX,cAAc,mBAJV,mEAAiB,aACtB,yDAAY,aACZ,mEAAiB;;;;;;;;;;;;;;;ACP7B,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/wish-input/wish-input.component.ts","./src/app/wish-input/wish-input.component.html","./src/app/wish-input/wish-input.module.ts","./src/app/wish-list/wish-list.component.ts","./src/app/wish-list/wish-list.component.html","./src/app/wish-list/wish-list.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'wishlist';\n}\n","<div class=\"wrapper\">\n  <div class=\"snow layer1 ab\"></div>\n  <div class=\"snow layer1\"></div>\n  <div class=\"snow layer2 ab\"></div>\n  <div class=\"snow layer2\"></div>\n  <div class=\"snow layer3 ab\"></div>\n  <div class=\"snow layer3\"></div>\n  <div class=\"content\">\n    <h1>Caros Weihnachts-Wünsche</h1>\n    <!-- <wish-input></wish-input> -->\n    <app-wish-list></app-wish-list>\n  </div>\n</div>\n\n<!-- use strapi -->\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WishInputModule } from './wish-input/wish-input.module';\nimport { WishListModule } from './wish-list/wish-list.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, WishListModule, WishInputModule],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'wish-input',\n  templateUrl: './wish-input.component.html',\n  styleUrls: ['./wish-input.component.scss']\n})\nexport class WishInputComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>wish-input works!</p>\n<form>\n  <label for=\"wish\"></label>\n  <input type=\"text\" name=\"wish\" />\n  <button>Wunsch hinzufügen</button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WishInputComponent } from './wish-input.component';\n\n@NgModule({\n  declarations: [WishInputComponent],\n  imports: [CommonModule],\n  exports: [WishInputComponent],\n})\nexport class WishInputModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-wish-list',\n  templateUrl: './wish-list.component.html',\n  styleUrls: ['./wish-list.component.scss']\n})\nexport class WishListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul>\n  <li>Wunsch 1 :)</li>\n</ul>\n<!-- <ul>\n  <li>Verschlusskappen für meine Trinkblasen</li>\n  <li>\n    Bügeleisen mit Dampffunktion (Z.B. Philipps Azure elite GC 5037/80, oder\n    Braun texstyle 9 Si 9188, oder Russell Hobbs one temperature\n  </li>\n  <li>Trockner</li>\n  <li>\n    Hochbeet in Anthrazit in folgenden Abmessungen(), oder Reperatur/Optimierung\n    des jetzigen, zB neue Behältnisse, Wasser läuft sofort durch\n  </li>\n  <li>WOK, Marke Spring, mit Bergkristall-technologie</li>\n  <li>Tomatenmesser</li>\n  <li>angepasste OhrStöpsel für meine Sennheiser</li>\n  <li>Salatbesteck von WMF, Serie Merit</li>\n  <li>Puzzle</li>\n</ul>\n\n<h2>Nur für Christian und mich</h2>\n<ul>\n  <li>Dampfgarer</li>\n  <li>Etwas zum passieren, zb FLotte Lotte in klein</li>\n</ul>\n<h2>Nur ganz evtl</h2>\n<ul>\n  <li>Dampfgarer</li>\n  <li>Etwas zum passieren, zb FLotte Lotte in klein</li>\n</ul> -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WishListComponent } from './wish-list.component';\n\n@NgModule({\n  declarations: [WishListComponent],\n  imports: [CommonModule],\n  exports: [WishListComponent],\n})\nexport class WishListModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}